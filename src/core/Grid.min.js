define(["PropsParser","RectSet","AbstractGrid","Color"],function(e,a,d,c){var b=function(g){console.log("intializing Grid...");g=typeof g=="object"?g:{};var f=this;d.apply(f,[g]);f.rectSets=[];f.checkedSets=[]};b.prototype=new d;b.prototype.getAreaInterval=function(o){var n=this;var l=e.parseNumber(o.x,0);var k=e.parseNumber(o.y,0);var f=e.parseNumber(o.width,0);var m=e.parseNumber(o.height,0);var j=parseInt(Math.floor(k/n.sh));var i=parseInt(Math.floor(l/n.sw));var h=parseInt(Math.floor((k+m)/n.sh));var g=parseInt(Math.floor((l+f)/n.sw));return{si:j,sj:i,ei:h,ej:g}};b.prototype.getRectsFromArea=function(l){var h=[];var g=this;var f=g.getAreaInterval(l);for(var m=f.si;m<=f.ei;m++){if(g.rectSets[m]!=undefined){for(var k=f.sj;k<=f.ej;k++){if(g.rectSets[m][k]!=undefined){h.push(g.rectSets[m][k])}}}}return h};b.prototype.apply=function(g,h){var f=this;f.fillStyle=c.isColor(g.fillStyle)?g.fillStyle:f.fillStyle;f.strokeStyle=c.isColor(g.strokeStyle)?g.strokeStyle:f.strokeStyle;f.rectSets.forEach(function(i){i.forEach(function(j){if(h==undefined||h.apply(j)){j.set(g)}})});return f};b.prototype.set=function(i){var g=this;i=i==undefined?{}:i;var l=g.width;var f=g.height;var k=g.x;var j=g.y;var m=g.sw;var h=g.sh;g.width=e.parseNumber(i.width,g.width);g.height=e.parseNumber(i.height,g.height);g.sw=e.parseNumber(i.sw,g.sw);g.sh=e.parseNumber(i.sh,g.sh);g.fillStyle=c.isColor(i.fillStyle)?i.fillStyle:g.fillStyle;g.strokeStyle=c.isColor(i.strokeStyle)?i.strokeStyle:g.strokeStyle;if(g.sw!=m||g.sh!=h){g.rectSets=[]}g.update();return g};b.prototype.update=function(){var q=this;var p=q.sw;var l=q.sh;var o=q.width;var k=q.height;if(o>0&&k>0){var n=Math.floor(o/p);var r=Math.floor(k/l);var m=0;for(var g=q.rectSets.length;g<r;g++){if(q.rectSets[g]==undefined){q.rectSets[g]=[]}for(var f=q.rectSets[g].length;f<n;f++){m++;q.rectSets[g][f]=new a({x:f*q.sw,y:g*q.sh,width:p,height:l,fillStyle:q.fillStyle,strokeStyle:q.strokeStyle,i:g,j:f})}}for(var f=q.rectSets[0].length;f<n;f++){for(var g=0;g<q.rectSets.length;g++){m++;q.rectSets[g][f]=new a({x:f*q.sw,y:g*q.sh,width:p,height:l,fillStyle:q.fillStyle,strokeStyle:q.strokeStyle,i:g,j:f})}}for(var g=0;g<q.rectSets.length;g++){q.rectSets[g].length=n}q.rectSets.length=Math.min(r,q.rectSets.length)}else{q.rectSets=[]}return q};return b});